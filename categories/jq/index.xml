<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jq on ftisiot ideas about tech, food and life</title>
    <link>https://ftisiot.net/categories/jq/</link>
    <description>Recent content in Jq on ftisiot ideas about tech, food and life</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Feb 2024 11:25:54 +0100</lastBuildDate>
    <atom:link href="https://ftisiot.net/categories/jq/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to load JSON data in PostgreSQL with the COPY command</title>
      <link>https://ftisiot.net/postgresqljson/load-json-data-with-postgresql-copy/</link>
      <pubDate>Fri, 02 Feb 2024 11:25:54 +0100</pubDate>
      <guid>https://ftisiot.net/postgresqljson/load-json-data-with-postgresql-copy/</guid>
      <description>&lt;p&gt;You have a JSON dataset that you want to upload to a PostgreSQL table containing properly formatted rows and columns&amp;hellip; How do you do it?&lt;/p&gt;&#xA;&lt;p&gt;All the main sources like &lt;a href=&#34;https://ftisiot.net/postgresqljson/how-to-load-json-postgresql&#34;&gt;my own blog&lt;/a&gt; and &lt;a href=&#34;https://konbert.com/blog/import-json-into-postgres-using-copy&#34;&gt;others&lt;/a&gt; tell you to load the JSON in a dedicated temporary table containing a unique &lt;code&gt;JSON&lt;/code&gt; column, then parse it and load into the target table. However there could be another way, avoiding the temp table!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beautify `kcat` consumer output by piping to `jq`</title>
      <link>https://ftisiot.net/posts/jq-kcat-consumer/</link>
      <pubDate>Thu, 31 Mar 2022 13:39:18 +0200</pubDate>
      <guid>https://ftisiot.net/posts/jq-kcat-consumer/</guid>
      <description>&lt;p&gt;I was working on some demos recently on the Apache Kafka source connectors (hi #KafkaSummit!), and trying to display the stream of changes in the resulting Apache Kafka topic.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
